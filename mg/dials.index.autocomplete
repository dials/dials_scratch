#!/bin/bash
source dials.hints

declare -A _dials_autocomplete_data=( ["dials.index"]="1" )

function _dials_autocomplete ()
{
  # This function provides autocomplete functionality to supported dials commands

  local cur prev
  cur="${COMP_WORDS[COMP_CWORD]}"
  prev="${COMP_WORDS[COMP_CWORD-1]}"

  COMPREPLY=()

  # Check if the requested command is supported. If not, use default completion.
  if [ ! ${_dials_autocomplete_data[$1]+exists} ]; then compopt -o default; return 0; fi

  local H
  local pprev=""
  if [ "${COMP_CWORD}" -gt "2" ] ; then
    pprev="${COMP_WORDS[COMP_CWORD-2]}"
  fi

#  {
#   echo "1: $1"
#   echo "COMP_WORDS: ${COMP_WORDS[*]}"
#   echo "COMP_CWORD: $COMP_CWORD"
#   echo "CUR: $cur"
#   echo "PREV: $prev"
#   echo "PPREV: $pprev"
#  } > completion.log


  # Define two helper functions from bash_completion
  #
  # Return 1 if $1 appears to contain a redirection operator.  Handles backslash
  # quoting (barely).
  _redir_op()
  {
    case "$1" in
    *\\'[\<\>]'*)	return 1;;
    *[\<\>]*)	return 0;;
    *)		return 1;;
    esac
  }

  # _redir_test tests the current word ($1) and the previous word ($2) for
  # redirection operators and does filename completion if either one contains
  # a redirection operator
  _redir_test()
  {
    if _redir_op "$1" ; then
      COMPREPLY=( $( compgen -f "" ) )
      return 0
    elif _redir_op "$2" ; then
      COMPREPLY=( $( compgen -f "$1" ) )
      return 0
    fi
    return 1
  }

  _redir_test "$cur" "$prev" && return 0;

  local json='!*.json'
  local pickle='!*.pickle'
  local phil='!*.phil'

  if [[ ${cur} == "=" ]]; then
    # initial autocompletion of parameter
#    echo "cp 1" >> completion.log
    if [ ${flags[${prev}]+exists} ]; then
#      echo "cp 2" >> completion.log
      COMPREPLY=( ${flags[${prev}]} )
      return 0
    fi
  fi
  if [[ ${prev} == "=" ]]; then
   # autocompletion of parameter with existing text
   if [ ${flags[${pprev}]+exists} ]; then
    COMPREPLY=( $(compgen -W "${flags[${pprev}]}" -- "${cur}") )
   fi
   return 0
  fi

  _hints "${cur}"

#  echo "= top level" >> completion.log
  COMPREPLY=( $(compgen -W "${H}" -- ${cur}) \
              $(compgen -f -X "${json}" -- "${cur}") \
              $(compgen -f -X "${pickle}" -- "${cur}") \
              $(compgen -f -X "${phil}" -- "${cur}") )
  compopt -o nospace
  if [[ ${#COMPREPLY[@]} == 1 ]]; then
   # If there's only one option, check if it is expandable
   if [[ ${expansion[${COMPREPLY[0]}]+exists} ]] ; then
     COMPREPLY=( ${expansion[${COMPREPLY[0]}]} )
   fi
   # If the only option is not ending in '.' or '=', then append a space
   if [[ ${COMPREPLY[0]} != *. && ${COMPREPLY[0]} != *= ]] ; then
    compopt +o nospace
   fi
  fi
  return 0
}
complete -F _dials_autocomplete dials.index
