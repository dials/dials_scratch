#!/bin/bash
source dials.index.info
source dials.hints

# 
# Return 1 if $1 appears to contain a redirection operator.  Handles backslash
# quoting (barely).
#
_redir_op()
{
	case "$1" in
	*\\'[\<\>]'*)	return 1;;
	*[\<\>]*)	return 0;;
	*)		return 1;;
	esac
}

# _redir_test tests the current word ($1) and the previous word ($2) for
# redirection operators and does filename completion if either one contains
# a redirection operator
_redir_test()
{
	if _redir_op "$1" ; then
		COMPREPLY=( $( compgen -f "" ) )
		return 0
	elif _redir_op "$2" ; then
		COMPREPLY=( $( compgen -f "$1" ) )
		return 0
	fi
	return 1
}

function _dials_index ()
{
    local cur prev opts
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    pprev=""
    if [ "${COMP_CWORD}" -gt "2" ] ; then
      pprev="${COMP_WORDS[COMP_CWORD-2]}"
    fi
    opts=$dials_index_opts

#    {
#     echo "COMP_WORDS: ${COMP_WORDS[*]}"
#     echo "COMP_CWORD: $COMP_CWORD"
#     echo "CUR: $cur"
#     echo "PREV: $prev"
#     echo "PPREV: $pprev"
#    } > completion.log

    _redir_test "$cur" "$prev" && return 0;

    local json='!*.json'
    local pickle='!*.pickle'
    local phil='!*.phil'

    if [[ ${cur} == "=" ]]; then
      # initial autocompletion of parameter
#      echo "cp 1" >> completion.log
      if [ ${flags[${prev}]+exists} ]; then
#        echo "cp 2" >> completion.log
        COMPREPLY=( ${flags[${prev}]} )
#        echo "COMPREPLY: ${COMPREPLY[*]}" >> completion.log
        return 0
      fi
    fi
    if [[ ${prev} == "=" ]]; then
     # autocompletion of parameter with existing text
#     echo "cp 6" >> completion.log
     if [ ${flags[${pprev}]+exists} ]; then
      local opts=${flags[${pprev}]}
      COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
     fi
     return 0
    fi

    _dials_index_hints "${cur}"
    local PARAMS=$H

#    echo "= top level" >> completion.log
    COMPREPLY=( $(compgen -W "${PARAMS}" -- ${cur}) \
                $(compgen -f -X "${json}" -- "${cur}") \
                $(compgen -f -X "${pickle}" -- "${cur}") \
                $(compgen -f -X "${phil}" -- "${cur}") )
    if [[ ${#COMPREPLY[@]} == 1 && ${COMPREPLY[0]} != *. && ${COMPREPLY[0]} != *= ]] ; then
      # If there's only one option, not ending in '.' or '=', then allow a space
      compopt +o nospace
    else
      compopt -o nospace
    fi
    return 0
}
complete -F _dials_index dials.index
